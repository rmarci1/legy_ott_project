// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model job{
  id Int @id @default(autoincrement())
  name String
  date DateTime
  img String
  description String
  from String
  max_attending Int
  current_attending Int
  address String

  profiles jobProfile[]
}

model profile{
  id Int @id @default(autoincrement())
  name String
  username String @unique
  email String @unique
  profileImg String
  password String
  advertiser Boolean @default(false)
  description String

  reviews review[]
  jobs jobProfile[]
}

model review{
  id Int @id @default(autoincrement())
  reviewed profile @relation(fields: [reviewed_un], references: [username], onDelete: Cascade) 
  reviewed_un String
  reviewer_un String
  review Int
  desc String?
}

model jobProfile {
  profile profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId Int

  job job @relation(fields: [jobId], references: [id], onDelete: Cascade)
  jobId Int

  saveForLater Boolean
  isApplied Boolean
  @@id([profileId, jobId])
}
